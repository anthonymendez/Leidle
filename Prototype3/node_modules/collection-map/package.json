{
  "_args": [
    [
      {
        "raw": "collection-map@^0.1.0",
        "scope": null,
        "escapedName": "collection-map",
        "name": "collection-map",
        "rawSpec": "^0.1.0",
        "spec": ">=0.1.0 <0.2.0",
        "type": "range"
      },
      "C:\\xampp\\htdocs\\Prototype2\\node_modules\\undertaker"
    ]
  ],
  "_from": "collection-map@>=0.1.0 <0.2.0",
  "_id": "collection-map@0.1.0",
  "_inCache": true,
  "_location": "/collection-map",
  "_nodeVersion": "0.12.4",
  "_npmUser": {
    "name": "jonschlinkert",
    "email": "github@sellside.com"
  },
  "_npmVersion": "2.10.1",
  "_phantomChildren": {
    "for-own": "0.1.5"
  },
  "_requested": {
    "raw": "collection-map@^0.1.0",
    "scope": null,
    "escapedName": "collection-map",
    "name": "collection-map",
    "rawSpec": "^0.1.0",
    "spec": ">=0.1.0 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/undertaker"
  ],
  "_resolved": "https://registry.npmjs.org/collection-map/-/collection-map-0.1.0.tgz",
  "_shasum": "4cff91d25108d79f4edeecce6ecee3e488f267c2",
  "_shrinkwrap": null,
  "_spec": "collection-map@^0.1.0",
  "_where": "C:\\xampp\\htdocs\\Prototype2\\node_modules\\undertaker",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/collection-map/issues"
  },
  "dependencies": {
    "arr-map": "^2.0.0",
    "get-values": "^0.1.0",
    "is-plain-object": "^2.0.1",
    "make-iterator": "^0.1.1"
  },
  "description": "Returns an array of mapped values from an array or object.",
  "devDependencies": {
    "mocha": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "4cff91d25108d79f4edeecce6ecee3e488f267c2",
    "tarball": "https://registry.npmjs.org/collection-map/-/collection-map-0.1.0.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/jonschlinkert/collection-map",
  "keywords": [],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "jonschlinkert",
      "email": "github@sellside.com"
    }
  ],
  "name": "collection-map",
  "optionalDependencies": {},
  "readme": "# collection-map [![NPM version](https://badge.fury.io/js/collection-map.svg)](http://badge.fury.io/js/collection-map)\n\n> Returns an array of mapped values from an array or object.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/)\n\n```sh\n$ npm i collection-map --save\n```\n\n## Usage\n\n```js\nvar map = require('collection-map');\n```\n\n### objects\n\n**map object values**\n\n```js\nvar obj = {a: 'foo', b: 'bar', c: 'baz'};\nvar res = map(obj, function(item, i, arr) {\n  return item;\n});\n\n// res => ['foo', 'bar', 'baz']\n```\n\n**index is exposed as the second param**\n\n```js\nvar res = map(obj, function(item, i, arr) {\n  return i;\n});\n\n// res => [0, 1, 2]\n```\n\n### arrays\n\n**map array values**\n\n```js\nvar arr = ['foo', 'bar', 'baz'];\nvar res = map(arr, function(item, i, arr) {\n  return item;\n});\n\n// res => ['foo', 'bar', 'baz']\n```\n\n**index is exposed as the second param**\n\n```js\nvar arr = ['foo', 'bar', 'baz'];\nvar res = map(arr, function(item, i, arr) {\n  return i;\n});\n\n// res => [0, 1, 2]\n```\n\n### strings\n\n**works with strings**\n\n```js\nvar obj = {\n  a: {aaa: 'one', bbb: 'four', ccc: 'seven'},\n  b: {aaa: 'two', bbb: 'five', ccc: 'eight'},\n  c: {aaa: 'three', bbb: 'six', ccc: 'nine'}\n};\n\nvar arr = [obj.a, obj.b, obj.c];\n\nvar res = map(obj, 'aaa');\n// res => ['one', 'two', 'three']\n\nvar res = map(arr, 'bbb');\n// res => ['four', 'five', 'six']\n```\n\n### this\n\n**exposes the third argument as `this`**\n\n```js\nvar arr = ['a', 'b', 'c'];\nvar ctx = {a: 'aaa', b: 'bbb', c: 'ccc'};\n\nvar res = map(arr, function(item, i, arr) {\n  return this[item];\n}, ctx);\n\n// res => ['aaa', 'bbb', 'ccc']\n```\n\n## Related projects\n\n* [arr-map](https://github.com/jonschlinkert/arr-map): Faster, node.js focused alternative to JavaScript's native array map.\n* [get-values](https://github.com/jonschlinkert/get-values): Return an array of all values from the given object.\n* [is-plain-object](https://github.com/jonschlinkert/is-plain-object): Returns true if an object was created by the `Object` constructor.\n* [make-iterator](https://github.com/jonschlinkert/make-iterator): Convert an argument into a valid iterator. Based on the `.makeIterator()` implementation in mout https://github.com/mout/mout.\n\n## Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm i -d && npm test\n```\n\n## Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/collection-map/issues/new)\n\n## Author\n\n**Jon Schlinkert**\n\n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\n\nCopyright Â© 2015 Jon Schlinkert\nReleased under the MIT license.\n\n***\n\n_This file was generated by [verb-cli](https://github.com/assemble/verb-cli) on June 07, 2015._\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jonschlinkert/collection-map.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "0.1.0"
}
